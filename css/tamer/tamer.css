#lang css

@charset "utf-8";

@import url(bitmap.css);

@namespace tamer url(github.com/wargrey/css/testcases/syntax);
@namespace toto "http://toto.example.org";

@font-face {
  font-family: "CrassRoots";
  src: url("../media/cr.ttf");
  unicode-range: U+0025-00FF;
}
	
root, body; #this-is-eaten-by-the-last-semicomma {
        margin: 10px 2em 1cm 2%;
	font-family: Verdana, Helvetica, "Gill Sans", sans-serif;
	color: red !important;
}

@keyframes mymove {
	from { top: 0px; }
	to { top: 200px; }
}

@-moz-keyframes some-move {
	from { top: 0px; }
	to { top: 200px; }
}

@supports ( (perspective: 10px) or (-moz-perspective: 10px) or (-webkit-perspective: 10px) or (-ms-perspective: 10px) or (-o-perspective: 10px) ) {
	body {
		font-family: 'Helvetica';
	}
}

@page :pseudo-class {
  margin:2in;
}

@-moz-document url(http://www.w3.org/),
               url-prefix(http://www.w3.org/Style/),
               domain(mozilla.org),
               regexp("https:.*") {
  /* CSS rules here apply to:
     + The page "http://www.w3.org/".
     + Any page whose URL begins with "http://www.w3.org/Style/"
     + Any page whose URL's host is "mozilla.org" or ends with
       ".mozilla.org"
     + Any page whose URL starts with "https:" */
 
  /* make the above-mentioned pages really ugly */
  body { color: purple; background: yellow; }
}

@media screen and (orientation: landscape) {
  @viewport {
    width: 1024px ?; /* test CSS<?> combinator, okay with exn:css:overconsumption */
    width: 1024px 1280px;
    height: 768px 768dpi; /* test CSS<?> combinator, fail with exn:css:unit */
    height: 800px;
  }
  /* CSS for landscape layout goes here */
  body {
    color: purple;
    background: yellow;
  }
}

@region-style #intro {
    p { color: blue; }
}@CharSet "utf-8";
@IMPORT uRL(../stone/tamer.css);

@MEDIA screen {

}

#myid {
	CaSe: insensitive !imPORTANT;
	frequency: 30hz;
	font-size: 1EM;
	color: RGB(255, 255, 0);
	color: hSL(40, 40%, 30%);
	font-Family: Arial; /* The value needs to remain capitalized */
}

@charset 'utf-16';

@media print {
  @charset 'utf-16';
}

#mine {
	color: red;
	border-color: rgb(10, 100, 230);
	border-color: rgba(10, 100, 231, 0.3);
	outline-color: #222;
	background-color: #232323;
}

#yours {
	background-color: hsl(220, 10%, 220%);
	background-color: hsla(220, 10%, 220%, 0.3);
}

/**
 * Comments Hell.
 */

@import /* Number 1 */"some/url.css"/* Number 2 */ screen/* Number 3 */;

.foo, /* Number 4 */          #foo/* Number 5 */ /* Number 6*/ #bar {
    background-color/* Number 6 */: #000/* Number 7 */;
}

@media /* Number 8 */screen /* Number 9 */{
    /** Number 10 **/
    #foo.bar {
        position: absolute;/**/
    }
}

/** Number 11 **/body {
  font-size: 2em; font-family: Helvetica,Arial,sans-serif; font-weight: bold;
  border-width: 2px; border-color: #9999; border-style: dotted;
  background-color: #fff; background-image: url('foobar.png'); background-repeat: repeat-y;
  margin-top: 2px; margin-right: 3px; margin-bottom: 4px; margin-left: 5px;
}

body {
  font: italic 500 14px/1.618 "Trebuchet MS", Georgia, serif;
  border: 2px solid #f0f;
  background: #ccc url("/images/foo.png") no-repeat left top;
  margin: 1em !important;
  padding: 2px 6px 3px;
}

.test1 {
	//gaga: hello;
}

.test2 {
	*hello: 1;
	hello: 2.2;
	hello: 2000000000000.2;
}

#test {
	#hello: 1}

#test2 {
	help: none;div.main { background-image: linear-gradient(#000, #fff) }}

.collapser::before,
.collapser::-moz-before,
.collapser::-webkit-before {
    content: "Â»";
    font-size: 1.2em;
    margin-right: .2em;
    -moz-transition-property: -moz-transform;
    -moz-transition-duration: .2s;
    -moz-transform-origin: center 60%;
}

.collapser.expanded::before,
.collapser.expanded::-moz-before,
.collapser.expanded::-webkit-before { -moz-transform: rotate(90deg) }
.collapser + * {
    height: 0;
    overflow: hidden;
    -moz-transition-property: height;
    -moz-transition-duration: .3s;
}

.collapser.expanded + * { height: auto }
.nav-thumb-wrapper:hover img, a.activeSlide img {
	filter: alpha(opacity=100);
	-moz-opacity: 1;
	-khtml-opacity: 1;
	opacity: 1;
}	

div.rating-cancel,div.star-rating{float:left;width:17px;height:15px;text-indent:-999em;cursor:pointer;display:block;background:transparent;overflow:hidden}
div.rating-cancel,div.rating-cancel a{background:url(images/delete.gif) no-repeat 0 -16px}
div.star-rating,div.star-rating a{background:url(images/star.gif) no-repeat 0 0px}
div.rating-cancel a,div.star-rating a{display:block;width:16px;height:100%;background-position:0 0px;border:0}
div.star-rating-on a{background-position:0 -16px!important}
div.star-rating-hover a{background-position:0 -32px}
div.star-rating-readonly a{cursor:default !important}
div.star-rating{background:transparent!important; overflow:hidden!important}test {
	background: -webkit-gradient(linear, 0 0, 0 bottom, from(#006cad), to(hsl(202, 100%, 49%)));
}/* From the spec at http://www.w3.org/TR/css3-namespace/ */

/* From an introduction at http://www.blooberry.com/indexdot/css/syntax/atrules/namespace.htm */
@namespace foo url('http://www.example.com/');

error| {
   code: missing-identifier;
}

foo|test {
	gaga: 1;
}

|test {
	gaga: 2;
}root {
	some: -test(val1);
}

root {
	some-other: -test(val1);
}

@media screen {
	root {
		some: -test(val2);
	}
}

#unrelated {
	other: yes;
}
.test {
	font: 12px/1.5 Verdana, Arial, sans-serif;
	border-radius: 5px 10px 5px 10px / 10px 5px 10px 5px;
}
#test .help,
#file,
.help:hover,
li.green,
ol li::before {
	font-family: Helvetica;
}
.some[selectors-may='contain-a-{'] {
    placeholder: keep-this-rule;
}
[attr]{}

@media only screen and (min-width: 200px) {
  .test {
    prop: val;
  }
}

.test-4 { content: "\1D11E" } /* Beyond the Basic Multilingual Plane */
body { background: #FFFFFF url("http://somesite.com/images/someimage.gif") repeat top center; }
body {
	background-url: url("http://somesite.com/images/someimage.gif");
}#header {
	margin: 10px 2em 1cm 2%;
	font-family: Whatever, Verdana, Helvetica, Gill Sans, sans-serif;
	background-color: green;
	background-color: HsIa(120.01deg var(--honeydew-s) var(--honeydew-i) / 1.0);
	frequency: 30Hz;
        lazy-test: arg0(arg00(var(--s) * 1px)) arg1(var(--pi, arg10(10% * 2deg)));
}

.test { background:-webkit-linear-gradient(top right, white, black)}
.test {
   foreground-image : url(bad url);
	background-image : url ( U+62-64 ) ;
}

.test { \~a: "escaped-identifier"; }
